{"version":3,"sources":["reducers/index.js","store.js","components/Plugin/Plugin.js","components/Certs/Certs.js","components/CertInfo/CertInfo.js","components/Data/Data.js","components/Sign/Sign.js","components/App/App.js","actions/index.js","index.js"],"names":["initialState","plugin","listCert","certInfo","certID","sign","reducer","state","action","type","payload","store","createStore","connect","pluginVersion","Fragment","className","onCert","certs","map","cert","key","id","value","onClick","name","size","multiple","formatDate","date","d","Date","month","getMonth","day","getDate","year","getFullYear","length","join","SubjectName","IssuerName","ValidFromDate","ValidToDate","Data","text","textLimit","onChangeData","e","setState","target","slice","this","props","onSign","massage","rows","cols","onChange","Component","defaultValue","App","cryptopro","CryptoPro","initPlugin","a","init","then","info","isPlugin","version","listCertificates","list","getListCert","idCert","str64","btoa","encodeURI","signData","signStr","certificateInfo","getCertInfo","isCert","mapDispatchToProps","certId","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.65333502.chunk.js","sourcesContent":["\r\n\r\nconst initialState = {\r\n    plugin: '',\r\n    listCert: [],\r\n    certInfo: {},\r\n    certID: null,\r\n\r\n    sign: ''\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    \r\n    switch (action.type) {\r\n        case 'IS_PLUGIN':\r\n            return {...state, plugin: action.payload}\r\n        case 'GET_LIST_CERT':\r\n            return {...state, listCert: action.payload}\r\n        case 'GET_CERT_INFO':\r\n            return {...state, certInfo: action.certInfo, certID: action.certID}\r\n\r\n        case 'ON_SIGN':\r\n            return {...state, sign: action.payload}\r\n\r\n\r\n        default:\r\n            return state\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default reducer","import {createStore} from 'redux'\r\nimport reducer from './reducers/index'\r\n\r\nconst store = createStore(reducer)\r\n\r\nexport default store","import React from 'react'\r\nimport './Plugin.css'\r\nimport { connect } from 'react-redux'\r\n\r\nconst Plugin = ({plugin}) => {\r\n\r\n\r\n\r\n\r\n    const pluginVersion = plugin ? `Версия плагина: ${plugin}` : 'Плагин не доступен'\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <h2>Проверка плагина</h2>\r\n        <div className=\"Plugin\">\r\n            {pluginVersion}\r\n        </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        plugin: state.plugin\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Plugin)","import React from 'react'\r\nimport './Certs.css'\r\nimport { connect } from 'react-redux'\r\n\r\n\r\n\r\nconst Certs = ({listCert, onCert}) => {\r\n\r\n    const certs = listCert.map((cert) => {\r\n\r\n        return (\r\n            <option key={cert.id} value=\"s1\" onClick={()=>onCert(cert.id)}>{cert.name}</option>\r\n        )\r\n    })\r\n\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <h2>Сертификаты</h2>\r\n            <div className=\"ListCertificate\">\r\n            <select name=\"select\" size=\"3\" multiple>\r\n                {certs}\r\n            </select>\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        listCert: state.listCert\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default connect(mapStateToProps)(Certs)","import React from 'react'\r\nimport './CertInfo.css'\r\nimport { connect } from 'react-redux'\r\n\r\nconst CertInfo = ({certInfo}) => {\r\n\r\n\r\n\r\n    function formatDate(date) {\r\n        let d = new Date(date),\r\n            month = '' + (d.getMonth() + 1),\r\n            day = '' + d.getDate(),\r\n            year = d.getFullYear();\r\n\r\n        if (month.length < 2)\r\n            month = '0' + month;\r\n        if (day.length < 2)\r\n            day = '0' + day;\r\n\r\n        return [year, month, day].join('-');\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <h2>Данные по сертификату</h2>\r\n            <div className=\"Certificate\">\r\n                <p>кому выдан: {certInfo.SubjectName}</p>\r\n                <p>Кем выдан: {certInfo.IssuerName}</p>\r\n                <p>{`действет с ${formatDate(certInfo.ValidFromDate)} по ${formatDate(certInfo.ValidToDate)}`}</p>\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        certInfo: state.certInfo\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(CertInfo)","import React, {Component} from 'react'\r\nimport './Data.css'\r\nimport { connect } from 'react-redux'\r\n\r\n\r\nclass Data extends Component{\r\n\r\n    state = {\r\n        text: '',\r\n        textLimit: false\r\n    }\r\n\r\n    onChangeData = (e) => {\r\n        if (this.state.text.length < 2001) {\r\n            this.setState(\r\n                {\r\n                    text: e.target.value.slice(0, 2000) ,\r\n                    textLimit: false\r\n                }\r\n            )\r\n        } else {\r\n            this.setState(\r\n                {\r\n                    textLimit: true\r\n                }\r\n            )\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        const {onSign, certID} = this.props\r\n\r\n\r\n        const massage = this.state.textLimit ?  <span>Текст не должен привышать 2000 символов</span> : null\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <h2>Данные для подписи</h2>\r\n                <div className=\"Data\">\r\n\r\n                    {massage}\r\n\r\n                    <textarea rows=\"10\" cols=\"80\" name=\"text\" onChange={this.onChangeData} value={this.state.text}></textarea>\r\n                </div>\r\n\r\n                <button onClick={()=>onSign(certID, this.state.text)}>Подписать</button>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        certID: state.certID\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default connect(mapStateToProps)(Data)","import React from 'react'\r\nimport './Sign.css'\r\nimport { connect } from 'react-redux'\r\n\r\nconst Sign = ({sign}) => {\r\n    return (\r\n        <React.Fragment>\r\n            <h2>Подпись</h2>\r\n            <div className=\"Signature\">\r\n                <textarea rows=\"10\" cols=\"80\" name=\"text\" defaultValue={sign}></textarea>\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        sign: state.sign\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Sign)","import React, {Component} from 'react';\r\nimport './App.css';\r\nimport { CryptoPro } from 'ruscryptojs';\r\nimport { connect } from 'react-redux'\r\nimport {\r\n    isPlugin,\r\n    getListCert,\r\n    getCertInfo,\r\n    onSign} from './../../actions/index'\r\nimport Plugin from './../Plugin/Plugin'\r\nimport Certs from './../Certs/Certs'\r\nimport CertInfo from './../CertInfo/CertInfo'\r\nimport Data from './../Data/Data'\r\nimport Sign from './../Sign/Sign'\r\n\r\nclass App extends Component {\r\n\r\n\r\n    cryptopro = new CryptoPro();\r\n\r\n\r\n    initPlugin = async () => {\r\n        await this.cryptopro.init()\r\n            .then((info) => {\r\n\r\n                this.props.isPlugin(info.version)\r\n\r\n            })\r\n        await this.cryptopro.listCertificates()\r\n            .then((list) => {\r\n               this.props.getListCert(list)\r\n            })\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.initPlugin()\r\n    }\r\n\r\n    onSign = (idCert, text) => {\r\n\r\n        const str64 = btoa(encodeURI(text))\r\n        this.cryptopro.signData(str64, idCert).then((signStr) => {\r\n            this.props.onSign(signStr)\r\n        })\r\n    }\r\n\r\n    onCert = (idCert) => {\r\n        this.cryptopro.certificateInfo(idCert).then((info) => {\r\n            this.props.getCertInfo(info, idCert)\r\n        })\r\n    }\r\n\r\n    render() {\r\n\r\n\r\n        const isCert = this.props.certID ? <CertInfo/> : null\r\n\r\n        return (\r\n        <div className=\"App\">\r\n          <Plugin/>\r\n          <Certs onCert={(idCert)=>this.onCert(idCert)} />\r\n            { isCert }\r\n          <Data onSign={(certID)=>this.onSign(certID)}/>\r\n          <Sign/>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        certID: state.certID\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    isPlugin,\r\n    getListCert,\r\n    getCertInfo,\r\n\r\n    onSign\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n\r\n\r\n","\r\nconst isPlugin = (plugin) => {\r\n    return {\r\n        type: 'IS_PLUGIN',\r\n        payload: plugin\r\n    }\r\n}\r\nconst getListCert = (list) => {\r\n    return {\r\n        type: 'GET_LIST_CERT',\r\n        payload: list\r\n    }\r\n}\r\nconst getCertInfo = (certInfo, certId) => {\r\n    return {\r\n        type: 'GET_CERT_INFO',\r\n        certInfo: certInfo,\r\n        certID: certId\r\n    }\r\n}\r\n\r\n\r\nconst onSign = (signData) => {\r\n    return {\r\n        type: 'ON_SIGN',\r\n        payload: signData\r\n    }\r\n}\r\nexport {\r\n    isPlugin,\r\n    getListCert,\r\n    getCertInfo,\r\n    onSign\r\n\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux'\r\nimport store from './store'\r\n\r\nimport App from './components/App/App';\r\n\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>\r\n        , document.getElementById('root'));\r\n\r\n"],"sourceRoot":""}